监控策略：
	1. 监控K线
需要改动1） 一分钟K线监控：（30根K线）
				判断K线时间：确定是K线是否在该时间内存在（确定该交易对是否还存在）		否		邮件报警
				K线错误判定：连续相邻的两根K线的开，高，低，收都相等	是	邮件报警
							 判断出现一根K线出现开，高，低，收都相等且交易量为0		是		邮件报警
							 判断最新的一根K线（正在变动的K线）是否出现开，高，低，收都相等且交易量为0		是		邮件报警
		2）	三十分钟K线监控：（2）
				判断K线时间：确定是K线是否在该时间内存在（确定该交易对是否还存在）		否		邮件报警
				判断涨幅：单个K线的开，收涨跌幅在10%到30%邮件报警	超过30%短信报警
							最新的一根K线涨幅超过30%		是 		短信报警
		3）	一小时K线监控：（3根K线）
				判断K线时间：确定是K线是否在该时间内存在（确定该交易对是否还存在）		否		邮件报警
				判断波动情况：一小时内出现最高值和最低值波动范围小于1%		是 		邮件报警
				判断交易量：一小时内交易量是否为0
		4） 判断一个站的网络请求错误达到十次以上， 短信报警给后台
	2. 监控接口：
		对每个接口都进行访问，判断http状态码是否为200， 	否 		邮件报警
	3.飞小号监控：
		检测为小号接口是否正常，判断http状态码是否为200		否 		短信报警
		
对冲策略：
	1.	获取自己平台所有操盘账号的主资产变动情况
	2.	获取对冲平台的账户余额信息
	3.	根据操盘账户主资产变动情况，及对冲平台账户资产情况，判定某个数字货币是否可以实现对冲
	4.	获取对冲平台该交易对的价格情况，
	5.	根据资产变动的量，及获取的价格，在对冲平台实现买入和卖出
	6.	在对冲平台进行取消订单操作，获取真实对冲量。
	7.	根据真是对冲量，更新主资产变动表
	

执行的文件：（执行的命令）
nohup python -u monitor.py > log/test.log &
nohup python -u swagger_test/monitor_api.py > log/test_api.log &
nohup python -u fxh/feixiaohao_api.py > log/fxh.txt 
nohup python -u fxh/bxx_depth.py > log/market_depth.txt &
nohup python -u fxh/bxx_depth.py > log/market_depth.txt &