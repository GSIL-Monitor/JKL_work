# from price import *
# 修改了
from price import *

def get_config(ex_name, symbol):
    ret = {
        'symbol': symbol,
        'quantity_scale_buy': 0.2,
        'quantity_scale_sell': 0.2,
        'total_quant_per_day_btc': 1000,
        'account_fee': 0.001
    }
    auto_price = False
    if symbol == ['BTC', 'USDT']:
        sym0 = 'BTC'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 10
        base_order_range_scale = 1
        avg_sym_btc = 1
        symbol_price_decimal = 2
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 2
        min_quant = 0.002
        msym = 'BTC'
        order_gap = 0.005
    elif symbol == ['ETH', 'USDT']:
        sym0 = 'ETH'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 150
        base_order_range_scale = 1
        avg_sym_btc = 1 / 15
        symbol_price_decimal = 4
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.03
        msym = 'ETH'
        order_gap = 0.005
    elif symbol == ['LTC', 'USDT']:
        sym0 = 'LTC'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 500
        base_order_range_scale = 1
        avg_sym_btc = 1 / 115
        # 固定值
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
    elif symbol == ['XRP', 'USDT']:
        sym0 = 'XRP'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 20000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 16000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
    elif symbol == ['ADA', 'USDT']:
        sym0 = 'ADA'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 100000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 80000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
    elif symbol == ['ONT', 'USDT']:
        sym0 = 'ONT'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 5000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 3800
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.005
    elif symbol == ['NEO', 'USDT']:
        sym0 = 'NEO'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 500
        base_order_range_scale = 1
        avg_sym_btc = 1 / 400
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.005
    elif symbol == ['CC', 'USDT']:
        sym0 = 'CC'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        base_order_quantity_scale = 15000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 15000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = -1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.005
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal,
                                     0.03, 0.033, 0.027, 0.03, 0.001)
    elif symbol == ['ETH', 'BTC']:
        sym0 = 'ETH'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 100
        base_order_range_scale = 1
        avg_sym_btc = 1 / 15
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.03
        msym = 'ETH'
        order_gap = 0.005
    elif symbol == ['EMBC', 'ETH']:
        sym0 = 'EMBC'
        sym_base0 = 'ETH'
        exchange_base = 'fixed'
        base_order_quantity_scale = 20000
        base_order_range_scale = 2
        avg_sym_btc = 1 / 150000
        symbol_price_decimal = 8
        symbol_quant_decimal = 0
        symbol_quant_int_decimal = -2
        ret['quantity_scale_buy'] = 0.08
        min_quant = 10
        msym = 'ETH'
        order_gap = 0.01
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal,
                                     0.00002, 0.00003, 0.00001, 0.00002, 0.001)
    elif symbol == ['AE', 'USDT']:
        sym0 = 'AE'
        sym_base0 = 'BTC'
        exchange_base = 'binance'
        base_order_quantity_scale = 4000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 4000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1, change_mode='m', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['TRX', 'USDT']:
        sym0 = 'TRX'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 180000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 6
        symbol_quant_decimal = 1
        symbol_quant_int_decimal = -2
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['VEN', 'USDT']:
        sym0 = 'VEN'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 4200
        base_order_range_scale = 1
        avg_sym_btc = 1 / 4500
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['OMG', 'USDT']:
        sym0 = 'OMG'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 1000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1200
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['ZRX', 'USDT']:
        sym0 = 'ZRX'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 6000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 10000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1, change_mode='m', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['MKR', 'USDT']:
        sym0 = 'MKR'
        sym_base0 = 'USDT'
        exchange_base = 'okex'
        base_order_quantity_scale = 5
        base_order_range_scale = 1
        avg_sym_btc = 1 / 10
        symbol_price_decimal = 4
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.05
    elif symbol == ['ICX', 'USDT']:
        sym0 = 'ICX'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 7000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 7000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1, change_mode='m', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['BTM', 'USDT']:
        sym0 = 'BTM'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 20000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 25000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['REP', 'USDT']:
        sym0 = 'REP'
        sym_base0 = 'BTC'
        exchange_base = 'binance'
        base_order_quantity_scale = 300
        base_order_range_scale = 1
        avg_sym_btc = 1 / 250
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1, change_mode='m', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['DGD', 'USDT']:
        sym0 = 'DGD'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 100
        base_order_range_scale = 1
        avg_sym_btc = 1 / 90
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1, change_mode='m', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['DGD', 'BTC']:
        sym0 = 'DGD'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 80
        base_order_range_scale = 1
        avg_sym_btc = 1 / 90
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['BAT', 'USDT']:
        sym0 = 'BAT'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 25000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 30000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1, change_mode='m', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['BAT', 'BTC']:
        sym0 = 'BAT'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 20000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 30000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['BAT', 'ETH']:
        sym0 = 'BAT'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 18000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 30000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['ZIL', 'USDT']:
        sym0 = 'ZIL'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 150000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 180000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['DGD', 'ETH']:
        sym0 = 'DGD'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 60
        base_order_range_scale = 1
        avg_sym_btc = 1 / 90
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['MKR', 'ETH']:
        sym0 = 'MKR'
        sym_base0 = 'ETH'
        exchange_base = 'okex'
        base_order_quantity_scale = 3
        base_order_range_scale = 1
        avg_sym_btc = 1 / 10
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.05
    elif symbol == ['ICX', 'ETH']:
        sym0 = 'ICX'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 4000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 7000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['ICX', 'BTC']:
        sym0 = 'ICX'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 5000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 7000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['ZRX', 'ETH']:
        sym0 = 'ZRX'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 5000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 7000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['ZRX', 'BTC']:
        sym0 = 'ZRX'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 4000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 7000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['OMG', 'ETH']:
        sym0 = 'OMG'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 1100
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['TRX', 'ETH']:
        sym0 = 'TRX'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 170000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['AE', 'ETH']:
        sym0 = 'AE'
        sym_base0 = 'ETH'
        exchange_base = 'binance'
        base_order_quantity_scale = 3000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 4000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['REP', 'ETH']:
        sym0 = 'REP'
        sym_base0 = 'ETH'
        exchange_base = 'binance'
        base_order_quantity_scale = 250
        base_order_range_scale = 1
        avg_sym_btc = 1 / 250
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['REP', 'BTC']:
        sym0 = 'REP'
        sym_base0 = 'BTC'
        exchange_base = 'binance'
        base_order_quantity_scale = 300
        base_order_range_scale = 1
        avg_sym_btc = 1 / 250
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['BTM', 'ETH']:
        sym0 = 'BTM'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 17000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 25000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['OMG', 'BTC']:
        sym0 = 'OMG'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 1000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['BTM', 'BTC']:
        sym0 = 'BTM'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 22000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 25000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['TRX', 'BTC']:
        sym0 = 'TRX'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 250000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['AE', 'BTC']:
        sym0 = 'AE'
        sym_base0 = 'BTC'
        exchange_base = 'binance'
        base_order_quantity_scale = 9000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 4000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['WTC', 'BTC']:
        sym0 = 'WTC'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 3000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 2000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.03
    elif symbol == ['GNT', 'BTC']:
        sym0 = 'GNT'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 45000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 40000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.03
    elif symbol == ['HB', 'USDT']:
        sym0 = 'HB'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        base_order_quantity_scale = 4000
        base_order_range_scale = 3
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.03
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal,
                                     0.004, 0.02, 0.001, 0.004, 0.001)
    elif symbol == ['HB', 'BTC']:
        sym0 = 'HB'
        sym_base0 = 'USDT'
        exchange_base = 'bxx'
        base_order_quantity_scale = 1000
        base_order_range_scale = 3
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.03
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, ex_name,
                                   sym0, sym_base0, 1, change_mode='d', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['HB', 'ETH']:
        sym0 = 'HB'
        sym_base0 = 'USDT'
        exchange_base = 'bxx'
        base_order_quantity_scale = 1500
        base_order_range_scale = 3
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.03
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, ex_name,
                                   sym0, sym_base0, 1, change_mode='d', change_sym='ETH', change_sym_base='USDT')
    elif symbol == ['NBXX', 'USDT']:
        sym0 = 'NBXX'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        base_order_quantity_scale = 800
        base_order_range_scale = 3
        avg_sym_btc = 1 / 6000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.03
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal,
                                     0.05, 1, 0.01, 0.146, 0.001)
    elif symbol == ['LPAY', 'NBXX']:
        sym0 = 'LPAY'
        sym_base0 = 'NBXX'
        exchange_base = 'fixed'
        base_order_quantity_scale = 250000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 250000
        symbol_price_decimal = 4
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.7434, 5000, 50000, 0.001)
    elif symbol == ['DUH', 'BTC']:
        sym0 = 'DUH'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 25000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 20000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00006076, 300, 3000, 0.0014)
    elif symbol == ['TTGS', 'BTC']:
        sym0 = 'TTGS'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 12000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 10000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00010946, 150, 1500, 0.001)
    elif symbol == ['PTIT', 'BTC']:
        sym0 = 'PTIT'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 6000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 6000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00017929, 100, 1000, 0.001)
    elif symbol == ['FGBL', 'BTC']:
        sym0 = 'FGBL'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 30000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 35000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00002979, 500, 5000, 0.0013)
    elif symbol == ['LCOC', 'BTC']:
        sym0 = 'LCOC'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 35000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 30000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00003766, 500, 5000, 0.0012)
    elif symbol == ['ICWF', 'BTC']:
        sym0 = 'ICWF'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 70000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 60000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00001577, 1000, 10000, 0.0011)
    elif symbol == ['ZVX', 'BTC']:
        sym0 = 'ZVX'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 80000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 55000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00001921, 1000, 10000, 0.001)
    elif symbol == ['TUOD', 'BTC']:
        sym0 = 'TUOD'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 30000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 20000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00005842, 300, 3000, 0.0008)
    elif symbol == ['JLO', 'BTC']:
        sym0 = 'JLO'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 200000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00000547, 3000, 30000, 0.0009)
    elif symbol == ['NCBS', 'BTC']:
        sym0 = 'NCBS'
        sym_base0 = 'BTC'
        exchange_base = 'fixed'
        base_order_quantity_scale = 11000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 10000
        symbol_price_decimal = 8
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.00009329, 150, 1500, 0.0011)
    elif symbol == ['EPAY11', 'NBXX']:
        sym0 = 'EPAY11'
        sym_base0 = 'NBXX'
        exchange_base = 'fixed'
        base_order_quantity_scale = 100000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 100000
        symbol_price_decimal = 4
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.0405, 50000, 500000, 0.0012)
    elif symbol == ['NBPAY', 'NBXX']:
        sym0 = 'NBPAY'
        sym_base0 = 'NBXX'
        exchange_base = 'fixed'
        base_order_quantity_scale = 40000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 40000
        symbol_price_decimal = 4
        symbol_quant_decimal = 2
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.001
        auto_price = FakeStatusPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 1.0934, 5000, 50000, 0.0009)
    elif symbol == ['NBXX', 'BTC']:
        sym0 = 'NBXX'
        sym_base0 = 'USDT'
        exchange_base = 'bxx'
        base_order_quantity_scale = 700
        base_order_range_scale = 3
        avg_sym_btc = 1 / 6000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.05
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, ex_name,
                                   sym0, sym_base0, 1, change_mode='d', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['NBXX', 'ETH']:
        sym0 = 'NBXX'
        sym_base0 = 'USDT'
        exchange_base = 'bxx'
        base_order_quantity_scale = 600
        base_order_range_scale = 3
        avg_sym_btc = 1 / 6000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.05
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, ex_name,
                                   sym0, sym_base0, 1, change_mode='d', change_sym='ETH', change_sym_base='USDT')
    elif symbol == ['APV', 'ETH']:
        sym0 = 'APV'
        sym_base0 = 'ETH'
        exchange_base = 'fixed'
        base_order_quantity_scale = 2000
        base_order_range_scale = 2
        avg_sym_btc = 1 / 7500
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 0
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.005
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal,
                                     0.00073, 0.00208, 0.0001, 0.001, 0.001)
    elif symbol == ['HPS', 'BTC']:
        sym0 = 'EOS'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        avg_sym_btc = 1 / 100000
        base_order_range_scale = 3
        base_order_quantity_scale = 1000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.01
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1 / 80)
    elif symbol == ['HPS', 'USDT']:
        sym0 = 'EOS'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        avg_sym_btc = 1 / 100000
        base_order_range_scale = 3
        base_order_quantity_scale = 800
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.01
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1 / 80)
    elif symbol == ['DOGE', 'USDT']:
        sym0 = 'DOGE'
        sym_base0 = 'USDT'
        exchange_base = 'coinw'
        avg_sym_btc = 1 / 1000000
        base_order_range_scale = 3
        base_order_quantity_scale = 500000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.01
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], 6, -10000, exchange_base, sym0, sym_base0, 1,
                                   change_mode='CNY')
    elif symbol == ['HPY', 'USDT']:
        sym0 = 'HPY'
        sym_base0 = 'USDT'
        exchange_base = 'coinw'
        avg_sym_btc = 1 / 1000000
        base_order_range_scale = 3
        base_order_quantity_scale = 500000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.01
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], 6, -10000, exchange_base, sym0, sym_base0, 1,
                                   change_mode='CNY')
    elif symbol == ['CNXX', 'BTC']:
        sym0 = 'CNXX'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        avg_sym_btc = 1 / 400
        base_order_range_scale = 1
        base_order_quantity_scale = 400
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.005
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, ex_name,
                                   sym0, sym_base0, 1, change_mode='d', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['CNXX', 'USDT']:
        sym0 = 'CNXX'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        avg_sym_btc = 1 / 400
        base_order_range_scale = 1
        base_order_quantity_scale = 400
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 14.64, 14.71, 14.57, 14.64,
                                     0.0001, False)
    elif symbol == ['GATC', 'USDT']:
        sym0 = 'GATC'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        avg_sym_btc = 1 / 3500
        base_order_range_scale = 2
        base_order_quantity_scale = 1000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 2, 2.05, 1.95, 2, 0.001)
    elif symbol == ['DVC', 'USDT']:
        sym0 = 'DVC'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        avg_sym_btc = 1 / 60000
        base_order_range_scale = 2
        base_order_quantity_scale = 50000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.01
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.1, 0.15, 0.09, 0.12,
                                     0.001)
    elif symbol == ['QTUM', 'USDT']:
        sym0 = 'QTUM'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 5000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1500
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
    elif symbol == ['EOS', 'USDT']:
        sym0 = 'EOS'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 6000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1200
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
    elif symbol == ['XMX', 'USDT']:
        sym0 = 'XMX'
        sym_base0 = 'BTC'
        exchange_base = 'hadax'
        base_order_quantity_scale = 50000
        base_order_range_scale = 2
        avg_sym_btc = 1 / 10000000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
        auto_price = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                   sym0, sym_base0, 1, change_mode='m', change_sym='BTC', change_sym_base='USDT')
    elif symbol == ['DASH', 'USDT']:
        sym0 = 'DASH'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 100
        base_order_range_scale = 1
        avg_sym_btc = 1 / 40
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
    elif symbol == ['HC', 'USDT']:
        sym0 = 'HC'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 200
        base_order_range_scale = 1
        avg_sym_btc = 1 / 2000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['LTC', 'BTC']:
        sym0 = 'LTC'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 4800
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1200
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.005
    elif symbol == ['XMX', 'BTC']:
        sym0 = 'XMX'
        sym_base0 = 'BTC'
        exchange_base = 'hadax'
        base_order_quantity_scale = 50000
        base_order_range_scale = 2
        avg_sym_btc = 1 / 10000000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['BNB', 'BTC']:
        sym0 = 'BNB'
        sym_base0 = 'BTC'
        exchange_base = 'binan'
        base_order_quantity_scale = 3000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 600
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.005
    elif symbol == ['HT', 'BTC']:
        sym0 = 'HT'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 7000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 5000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.01
    elif symbol == ['CMT', 'BTC']:
        sym0 = 'CMT'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 70000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 60000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.01
    elif symbol == ['POLY', 'BTC']:
        sym0 = 'POLY'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 40000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 30000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.01
    elif symbol == ['NAS', 'BTC']:
        sym0 = 'NAS'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 10000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 4000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['ZIL', 'BTC']:
        sym0 = 'ZIL'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 240000
        base_order_range_scale = 2
        avg_sym_btc = 1 / 160000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['ZIL', 'ETH']:
        sym0 = 'ZIL'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 200000
        base_order_range_scale = 2
        avg_sym_btc = 1 / 160000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['CTXC', 'BTC']:
        sym0 = 'CTXC'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 15000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 20000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['CTXC', 'USDT']:
        sym0 = 'CTXC'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 17000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 20000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['CTXC', 'ETH']:
        sym0 = 'CTXC'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 13000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 20000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['IOST', 'BTC']:
        sym0 = 'IOST'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 60000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 600000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['SNT', 'BTC']:
        sym0 = 'SNT'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 200000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 180000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.02
    elif symbol == ['LINK', 'BTC']:
        sym0 = 'LINK'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 10000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 20000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['ELF', 'BTC']:
        sym0 = 'ELF'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 15000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 20000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['QASH', 'BTC']:
        sym0 = 'QASH'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 20000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 30000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.02
    elif symbol == ['IOST', 'USDT']:
        sym0 = 'IOST'
        sym_base0 = 'USDT'
        exchange_base = 'huobi'
        base_order_quantity_scale = 100000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 600000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['IOST', 'ETH']:
        sym0 = 'IOST'
        sym_base0 = 'ETH'
        exchange_base = 'huobi'
        base_order_quantity_scale = 80000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 600000
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['DASH', 'BTC']:
        sym0 = 'DASH'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 250
        base_order_range_scale = 1
        avg_sym_btc = 1 / 50
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'ETH'
        order_gap = 0.01
    elif symbol == ['EOS', 'BTC']:
        sym0 = 'EOS'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 6000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1250
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'BTC'
        order_gap = 0.005
    elif symbol == ['QTUM', 'BTC']:
        sym0 = 'QTUM'
        sym_base0 = 'BTC'
        exchange_base = 'huobi'
        base_order_quantity_scale = 1000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 1600
        symbol_price_decimal = 8
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
    elif symbol == ['COTO', 'USDT']:
        sym0 = 'COTO'
        sym_base0 = 'USDT'
        exchange_base = 'fixed'
        base_order_quantity_scale = 50000
        base_order_range_scale = 1
        avg_sym_btc = 1 / 200000
        symbol_price_decimal = 6
        symbol_quant_decimal = 4
        symbol_quant_int_decimal = 1
        min_quant = 0.0001
        msym = 'LTC'
        order_gap = 0.02
        auto_price = BaseWavingPrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, 0.03, 0.08, 0.01, 0.04,
                                     0.001, adjust_by_market=False)
    ret['sym0'] = sym0
    ret['sym_base0'] = sym_base0
    ret['exchange_base'] = exchange_base
    ret['base_order_quantity_scale'] = base_order_quantity_scale
    ret['base_order_range_scale'] = base_order_range_scale
    ret['avg_sym_btc'] = avg_sym_btc
    ret['symbol_price_decimal'] = symbol_price_decimal
    ret['symbol_quant_decimal'] = symbol_quant_decimal
    ret['symbol_quant_int_decimal'] = symbol_quant_int_decimal
    ret['min_quant'] = min_quant
    ret['msym'] = msym
    ret['order_gap'] = order_gap + 0.01
    if not auto_price:
        ret['auto_price'] = FixScalePrice(ex_name, symbol[0], symbol[1], symbol_price_decimal, -10000, exchange_base,
                                          sym0, sym_base0, 1)
    else:
        ret['auto_price'] = auto_price
    return ret
